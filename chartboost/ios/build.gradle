apply plugin: "java"
apply plugin: "robovm"

configurations { natives }

dependencies {
    compile project(":submarine-chartboost-core")
    compile fileTree(dir: 'libs', include: '*.jar')
    compile "org.robovm:robopods-chartboost-ios:1.12.0"
    compile "org.robovm:robovm-rt:${roboVMVersion}"
    compile "org.robovm:robovm-cocoatouch:${roboVMVersion}"
    compile "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
}

sourceSets.main.java.srcDirs = ["src/"]
sourceSets.main.resources.srcDirs = [file("assets").getAbsolutePath()]

sourceCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// Extracts native libs (*.a) from the native-ios.jar and places them
// under build/libs/ios/.
task copyNatives << {
    file("build/libs/ios/").mkdirs();
    configurations.natives.files.each { jar ->
        def outputDir = null
        if (jar.name.endsWith("natives-ios.jar")) outputDir = file("build/libs/ios")
        if (outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include "*.a"
            }
        }
    }
}

// Updates a robovm.xml file.
task updateRoboVMXML << {
    def xml = file('robovm.xml')

    if (!xml.exists()) {
        return
    }

    // Find all native (*.a) libraries beneath libs
    def libtree = fileTree(dir: 'build/libs', include: '**/*.a')

    def config = new groovy.util.XmlParser().parse(xml)
    config.libs.each { libs ->
        libs.children().clear()
        libtree.each { File file ->
            libs.appendNode('lib', 'build/libs/ios/' + file.getName())
        }
    }

    def writer = new FileWriter(xml)
    def printer = new XmlNodePrinter(new PrintWriter(writer))
    printer.setPreserveWhitespace true
    printer.print(config)
}

updateRoboVMXML.dependsOn copyNatives
build.dependsOn updateRoboVMXML
tasks.eclipse.dependsOn updateRoboVMXML

launchIPhoneSimulator.dependsOn build
launchIPadSimulator.dependsOn build
launchIOSDevice.dependsOn build
createIPA.dependsOn build


eclipse.project {
    name = "submarine-chartboost-ios"
    natures 'org.robovm.eclipse.RoboVMNature'
}